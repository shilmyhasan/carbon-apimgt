<%
jagg.block("item-manage", {
    initializer:function (data) {

    },

    getOutputs:function (inputs) {
    var name, version, api, result, mod,isPermitted,isCreatePermitted,tenant;

    name = request.getParameter("name");
    version = request.getParameter("version");
    provider = request.getParameter("provider");
    tenant=inputs.tenant;

    mod = jagg.module("api");
    isPermitted = jagg.getPublishPermitted().permitted;
    isCreatePermitted = jagg.getCreatePermitted().permitted;
    result = mod.getAPI({name:name, version:version, provider:provider});
    api = result.api;

    var apiData = {};
    apiData.provider = provider;
    apiData.name = name;
    apiData.version = version;
    var lcStatus = mod.getAPILCStatus(apiData);
    var apiWFstatus = mod.getAPILCWorkflowStatus(apiData);

    result = mod.isSynapseGateway();
    isSynapseGateway = result.isSynapseGateway;
    
    result = mod.isDataPublishingEnabled();
    isDataPublishingEnabled = result.isDataPublishingEnabled;

    var isClientCertificateBasedAuthenticationEnabled = mod.isClientCertificateBasedAuthenticationConfigured().isConfigured;
    var certificates = [];

    if (isClientCertificateBasedAuthenticationEnabled) {
        var results = mod.getClientCertificates(name, version, provider);
        if (results.certificates) {
            certificates = results.certificates;
        }
    }

        return {
            "api":api,
            "isPermitted":isPermitted,
            "isCreatePermitted":isCreatePermitted,
            "tenant":tenant,
            "isSynapseGateway":isSynapseGateway,
            "isDataPublishingEnabled":isDataPublishingEnabled,
            "lcStatus":lcStatus,
            "wfStatus":apiWFstatus,
            "certificates" : certificates,
            "isClientCertificateBasedAuthenticationEnabled" : isClientCertificateBasedAuthenticationEnabled
        }
    }

});
%>